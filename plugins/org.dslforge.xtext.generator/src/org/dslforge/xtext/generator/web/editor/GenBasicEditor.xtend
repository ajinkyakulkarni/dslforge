/**
 * <copyright>
 * 
 * Copyright (c) 2015 PlugBee. All rights reserved.
 * 
 * This program and the accompanying materials are made available 
 * under the terms of the Eclipse Public License v1.0 which 
 * accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Amine Lajmi - Initial API and implementation
 * 
 * </copyright>
 */
package org.dslforge.xtext.generator.web.editor

import org.dslforge.common.AbstractGenerator
import org.dslforge.common.IWebProjectFactory
import org.dslforge.xtext.generator.XtextGrammar
import org.eclipse.core.runtime.IProgressMonitor

class GenBasicEditor extends AbstractGenerator {

	var XtextGrammar grammar

	new() {
		super()
		relativePath = "/editor/"
	}

	override doGenerate(IWebProjectFactory factory, IProgressMonitor monitor) {
		grammar = factory.input as XtextGrammar
		projectName = grammar.getProjectName()
		grammarShortName = grammar.getShortName()
		basePath = grammar.getBasePath()
		factory.generateFile("src-gen/"+ basePath + relativePath, "Abstract" + grammarShortName + "Editor.java",
			toBasicXtextEditor(), monitor)
	}

	def toBasicXtextEditor() '''
«fileHeader»
package «projectName».editor;

import org.dslforge.styledtext.BasicText;
import org.dslforge.xtext.common.BasicXtextEditor;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.widgets.Composite;
import «projectName».editor.widget.«grammarShortName»;
import «projectName».internal.Activator;

public abstract class Abstract«grammarShortName»Editor extends BasicXtextEditor {

	public Abstract«grammarShortName»Editor() {
		super();
		setLanguageName(Activator.«grammar.name.toUpperCase.replace(".", "_")»);
		setInjector(Activator.getInstance().getInjector(Activator.«grammar.name.toUpperCase.replace(".", "_")»));
	}
	
	@Override
	protected BasicText createTextWidget(Composite parent, int styles) {
		«grammarShortName» «grammarShortName.toFirstLower»Widget = new «grammarShortName»(parent, styles);
		GridData textLayoutData = new GridData();
		textLayoutData.horizontalAlignment = SWT.FILL;
		textLayoutData.verticalAlignment = SWT.FILL;
		textLayoutData.grabExcessHorizontalSpace = true;
		textLayoutData.grabExcessVerticalSpace = true;
		«grammarShortName.toFirstLower»Widget.setLayoutData(textLayoutData);
		«grammarShortName.toFirstLower»Widget.setEditable(true);
		return «grammarShortName.toFirstLower»Widget;
	}
}
	'''

	def toXtextContentAssistEnabledEditor() '''
/**
 * @Generated by DSLFORGE
 */
package «projectName».editor;

import org.dslforge.styledtext.BasicText;
import org.dslforge.xtext.common.XtextContentAssistEnabledEditor;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.widgets.Composite;
import «projectName».editor.widget.«grammarShortName»;
import «projectName».internal.Activator;

public abstract class Abstract«grammarShortName»Editor extends XtextContentAssistEnabledEditor {

	public Abstract«grammarShortName»Editor() {
		super();
		setLanguageName(Activator.LANGUAGE_NAME);
		setInjector(Activator.getInstance().getInjector(Activator.LANGUAGE_NAME));
	}
	
	@Override
	protected BasicText createTextWidget(Composite parent, int styles) {
		«grammarShortName» «grammarShortName.toFirstLower»Widget = new «grammarShortName»(parent, styles);
		GridData textLayoutData = new GridData();
		textLayoutData.horizontalAlignment = SWT.FILL;
		textLayoutData.verticalAlignment = SWT.FILL;
		textLayoutData.grabExcessHorizontalSpace = true;
		textLayoutData.grabExcessVerticalSpace = true;
		«grammarShortName.toFirstLower»Widget.setLayoutData(textLayoutData);
		«grammarShortName.toFirstLower»Widget.setEditable(true);
		return «grammarShortName.toFirstLower»Widget;
	}
}
	'''

	def toJavaSrc() '''
/**
 * @Generated by DSLFORGE
 */
package «projectName».editor;

public class «grammarShortName»Editor extends Abstract«grammarShortName»Editor {

	static final String EDITOR_ID = "«projectName».editor";

	public «grammarShortName»Editor() {
		super();
	}
}
'''
}
